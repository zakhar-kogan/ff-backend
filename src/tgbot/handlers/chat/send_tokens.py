import asyncio

from telegram import Update
from telegram.error import BadRequest
from telegram.ext import ContextTypes

from src.tgbot.handlers.treasury.service import get_user_balance


async def send_tokens_to_reply(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    Explain a tg channel post to the user
    Handle message from channel in a chat
    """
    if (
        not update.message
        or not update.message.text
        or not update.message.reply_to_message
    ):
        return

    if not update.message.text[1:].isdigit():
        msg = await update.message.reply_text("–ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–æ –ø–æ—Å–ª–µ –ø–ª—é—Å–∏–∫–∞)")
        await asyncio.sleep(5)
        await msg.delete()
        try:
            await update.message.delete()
        except BadRequest:
            pass
        return

    to_send = int(update.message.text[1:])

    user_id = update.effective_user.id
    balance = await get_user_balance(user_id)

    if balance < to_send:
        msg = await update.message.reply_text("–£ —Ç–µ–±—è –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –±—É—Ä–≥–µ—Ä–æ–≤.....")
        await asyncio.sleep(5)
        await msg.delete()
        try:
            await update.message.delete()
        except BadRequest:
            pass
        return

    to_user_tg = update.message.reply_to_message.from_user
    if to_user_tg.is_bot:
        msg = await update.message.reply_text(
            "–ú–Ω–µ –Ω–µ –Ω—É–∂–Ω—ã —Ç–≤–æ–∏ –±—É—Ä–≥–µ—Ä—ã, —è –∏ –µ—Å—Ç—å –±—É—Ä–≥–µ—Ä"
        )
        await asyncio.sleep(5)
        await msg.delete()
        try:
            await update.message.delete()
        except BadRequest:
            pass
        return

    to_user_id = to_user_tg.id
    if user_id == to_user_id:
        return  # no need to send tokens to yourself

    # add a treasury transaction: -send, +send
    # send a private messages to both users

    await update.message.reply_text("–ü–æ–∫–∞ –Ω–µ –¥–æ–¥–µ–ª–∞–ª, —Å–æ—Ä–∏–∏")
    await update.message.set_reaction(reaction="üëå", is_big=True)
